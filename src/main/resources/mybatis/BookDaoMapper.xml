<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pl.akai.bookcrossing.book.BookDaoMapper">

    <resultMap id="baseBookMap" type="Book">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="available" property="isAvailable" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="fullBookMap" extends="baseBookMap" type="Book">
        <association column="owner_id" property="owner" javaType="User"
                     select="pl.akai.bookcrossing.login.UserDaoMapper.getUserById"/>
        <association column="reader_id" property="reader" javaType="User"
                     select="pl.akai.bookcrossing.login.UserDaoMapper.getUserById"/>
        <collection column="id" property="tagList" javaType="ArrayList" ofType="Tag" select="getTagsByBookId"/>
    </resultMap>

    <resultMap id="bookTagsMap" type="Tag">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="baseBookRentRequestMap" type="BookRentRequest">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <association column="requester_id" property="requester" javaType="User"
                     select="pl.akai.bookcrossing.login.UserDaoMapper.getUserById"/>
        <association column="book_id" property="book" javaType="Book"
                     select="pl.akai.bookcrossing.book.BookDaoMapper.getBookById"/>
    </resultMap>

    <select id="getAllBooks" resultMap="fullBookMap">
        SELECT *
        FROM tb_book;
    </select>

    <select id="getBookById" resultMap="fullBookMap">
        SELECT *
        FROM tb_book
        WHERE id = #{id}
    </select>

    <insert id="insertBook" useGeneratedKeys="true" keyProperty="book.id" keyColumn="id" statementType = "CALLABLE">
        {call ADD_BOOK(#{book.title, jdbcType = VARCHAR, mode = IN},
                       #{book.author, jdbcType = VARCHAR, mode = IN},
                       #{book.description, jdbcType = VARCHAR, mode = IN},
                       #{book.owner.id, jdbcType = INTEGER, mode = IN},
                       #{book.reader.id, jdbcType = INTEGER, mode = IN},
                       #{book.id, jdbcType = INTEGER, mode = OUT}
            )}
    </insert>

    <select id="getBooksByOwnerId" resultMap="fullBookMap">
        SELECT *
        FROM tb_book
        WHERE owner_id = #{user_id};
    </select>

    <select id="getBooksByReaderId" resultMap="fullBookMap">
        SELECT *
        FROM tb_book
        WHERE reader_id = #{user_id};
    </select>

    <select id="getTagsByBookId" resultMap="bookTagsMap">
        SELECT t.name
        FROM tb_resource_tags rt
                 INNER JOIN tb_tag t ON (t.id = rt.tag_id)
        WHERE rt.resource_id = #{id};
    </select>

    <select id="getBooksByTagId" resultMap="fullBookMap">
        SELECT b.*
        FROM tb_resource_tags rt
                 INNER JOIN tb_book b on rt.resource_id = b.id
        WHERE rt.tag_id = #{id};
    </select>

    <update id="updateReader">
        UPDATE tb_book
        SET reader_id = #{readerId}
        WHERE id = #{bookId};
    </update>

    <update id="updateAvailable">
        UPDATE tb_book
        SET available = #{available}
        WHERE id = #{bookId};
    </update>

    <insert id="insertBookUserRequest">
        INSERT INTO tb_book_user_request (requester_id, book_id)
        VALUES (#{bookRentRequest.requester.id}, #{bookRentRequest.book.id});
    </insert>

    <select id="getBookRentRequestsById" resultMap="baseBookRentRequestMap">
        SELECT tbur.*
        FROM tb_book_user_request tbur
                 INNER JOIN tb_user u ON (u.id = tbur.requester_id)
                 INNER JOIN tb_book b on (b.id = tbur.book_id)
        WHERE tbur.id = #{id};
    </select>

    <select id="getBookRentRequestsByReaderId" resultMap="baseBookRentRequestMap">
        SELECT tbur.*
        FROM tb_book_user_request tbur
                 INNER JOIN tb_user u ON (u.id = tbur.requester_id)
                 INNER JOIN tb_book b on (b.id = tbur.book_id)
        WHERE b.reader_id = #{readerId};
    </select>

    <select id="getBookRentRequestByRequesterAndBookIds" resultType="Integer">
        SELECT count(*)
        FROM tb_book_user_request tbur
        WHERE tbur.requester_id = #{requesterId}
          AND tbur.book_id = #{bookId};
    </select>

    <delete id="deleteBookRentRequestsById">
        DELETE
        FROM tb_book_user_request tbur
        WHERE tbur.id = ${id}
    </delete>
</mapper>
